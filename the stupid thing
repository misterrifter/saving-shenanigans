local cached
local nilInstances = true -- saves deleted children
local saveDeletedDescendants = false -- self explanatory (LAGGY)
local saveNewChildren = true -- self explanatory
local saveNewDescendants = false -- self explanatory (LAGGY)
local saveOnTrigger = true -- saves when any of the above are triggered and enabled
local waitTime = 0.25
function valid(p)
	return p and p:IsA("Instance") and not p:IsA("Terrain") and not p:IsA("Camera")
end
function cache()
	cached = game.ReplicatedFirst:FindFirstChild("Cached_"..game.PlaceId)
	if not cached then
		cached = Instance.new("Folder")
		cached.Name = "Cached_"..game.PlaceId
		cached.Parent = game.ReplicatedFirst
	end
end
local function f()
	local archive = Instance.new("Folder")
	archive.Name = "Archive_"..game.Workspace.DistributedGameTime
	archive.Parent = cached
	return archive
end
local function decompile()
	local existing = cached:FindFirstChild("Archive_"..game.Workspace.DistributedGameTime)
	if existing then return end
	local archive = f()
	for i, v in ipairs(game.Workspace:GetChildren()) do
		if valid(v) then
			local clone
			if not v.Archivable then
				v.Archivable = true
				clone = v:Clone()
				v.Archivable = false
				clone.Archivable = false
			else
				clone = v:Clone()
			end
			clone.Parent = archive
		end
	end
end
local function save(p)
	if not valid(p) then return end
	local archive = f()
	local clone = p:Clone()
	clone.Parent = archive
end
local function track(p)
	if not valid(p) then return end
	local f = game.ReplicatedFirst:FindFirstChild("Instances in nil")
	if not f then
		f = Instance.new("Folder")
		f.Name = "Instances in nil"
		f.Parent = game.ReplicatedFirst
	end
	local clone = p:Clone()
	clone.Parent = f
    clone:ClearAllChildren()
	for i, v in pairs(p:GetChildren()) do
		v:Clone().Parent = clone
	end
end
cache()
decompile()
if nilInstances then
	game.Workspace.ChildRemoved:Connect(function(p)
		if saveOnTrigger then
			decompile()
		end
		track(p)
	end)
end
if saveNewChildren then
	game.Workspace.ChildAdded:Connect(function(p)
		if saveOnTrigger then
			decompile()
		end
		task.wait(waitTime)
		save(p)
	end)
end
if saveNewDescendants then
	game.Workspace.DescendantAdded:Connect(function(p)
		if saveOnTrigger then
			decompile()
		end
		task.wait(waitTime)
		save(p)
	end)
end
if saveDeletedDescendants then
	game.Workspace.DescendantRemoving:Connect(function(p)
		if saveOnTrigger then
			decompile()
		end
		task.wait(waitTime)
		save(p)
	end)
end
